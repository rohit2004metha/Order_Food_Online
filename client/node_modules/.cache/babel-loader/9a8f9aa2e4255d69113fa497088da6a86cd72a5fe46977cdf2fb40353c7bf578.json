{"ast":null,"code":"var _jsxFileName = \"D:\\\\DACKSTOP\\\\New folder\\\\FoodDelivery-MERN\\\\client\\\\src\\\\pages\\\\Dishes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getAllProducts } from \"../api\"; // Import the API function\n\n// Styled-components for styling the dishes layout\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DishesContainer = styled.div`\n  padding: 20px;\n  max-width: 1200px;\n  margin: auto;\n`;\n_c = DishesContainer;\nconst DishCard = styled.div`\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 16px;\n  margin: 10px;\n  text-align: center;\n  background-color: #fff;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n`;\n_c2 = DishCard;\nconst DishImage = styled.img`\n  max-width: 100%;\n  height: auto;\n  border-radius: 8px;\n`;\n\n// Main Dishes component\n_c3 = DishImage;\nconst Dishes = () => {\n  _s();\n  const [dishes, setDishes] = useState([]);\n\n  // Fetch dishes data from the API\n  useEffect(() => {\n    const fetchDishes = async () => {\n      try {\n        const response = await getAllProducts(); // Fetch data using the API function\n        setDishes(response.data); // Update state with fetched data\n      } catch (error) {\n        console.error(\"Error fetching dishes:\", error); // Handle any errors\n      }\n    };\n    fetchDishes(); // Invoke the fetch function\n  }, []); // Dependency array is empty, so this effect runs once on component mount\n\n  return /*#__PURE__*/_jsxDEV(DishesContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dishes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: dishes.map(dish => /*#__PURE__*/_jsxDEV(DishCard, {\n        children: [/*#__PURE__*/_jsxDEV(DishImage, {\n          src: dish.image,\n          alt: dish.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: dish.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: dish.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", dish.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, dish._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Dishes, \"twy18IL6yOwKsB+klFzRM/xTDww=\");\n_c4 = Dishes;\nexport default Dishes;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"DishesContainer\");\n$RefreshReg$(_c2, \"DishCard\");\n$RefreshReg$(_c3, \"DishImage\");\n$RefreshReg$(_c4, \"Dishes\");","map":{"version":3,"names":["React","useEffect","useState","styled","getAllProducts","jsxDEV","_jsxDEV","DishesContainer","div","_c","DishCard","_c2","DishImage","img","_c3","Dishes","_s","dishes","setDishes","fetchDishes","response","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","dish","src","image","alt","name","description","price","_id","_c4","$RefreshReg$"],"sources":["D:/DACKSTOP/New folder/FoodDelivery-MERN/client/src/pages/Dishes.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getAllProducts } from \"../api\"; // Import the API function\r\n\r\n// Styled-components for styling the dishes layout\r\nconst DishesContainer = styled.div`\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: auto;\r\n`;\r\n\r\nconst DishCard = styled.div`\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n  margin: 10px;\r\n  text-align: center;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst DishImage = styled.img`\r\n  max-width: 100%;\r\n  height: auto;\r\n  border-radius: 8px;\r\n`;\r\n\r\n// Main Dishes component\r\nconst Dishes = () => {\r\n  const [dishes, setDishes] = useState([]);\r\n\r\n  // Fetch dishes data from the API\r\n  useEffect(() => {\r\n    const fetchDishes = async () => {\r\n      try {\r\n        const response = await getAllProducts(); // Fetch data using the API function\r\n        setDishes(response.data); // Update state with fetched data\r\n      } catch (error) {\r\n        console.error(\"Error fetching dishes:\", error); // Handle any errors\r\n      }\r\n    };\r\n    fetchDishes(); // Invoke the fetch function\r\n  }, []); // Dependency array is empty, so this effect runs once on component mount\r\n\r\n  return (\r\n    <DishesContainer>\r\n      <h2>Dishes</h2>\r\n      <div>\r\n        {dishes.map((dish) => (\r\n          <DishCard key={dish._id}>\r\n            <DishImage src={dish.image} alt={dish.name} />\r\n            <h3>{dish.name}</h3>\r\n            <p>{dish.description}</p>\r\n            <p>${dish.price}</p>\r\n          </DishCard>\r\n        ))}\r\n      </div>\r\n    </DishesContainer>\r\n  );\r\n};\r\n\r\nexport default Dishes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}